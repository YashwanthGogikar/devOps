pipeline {
  agent none
  stage
('Front-end') {
  agent {
    docker { image 'node:16-alpine' }
  }
  steps {
    sh '''
      cat > app.js <<'EOF'
      const express = require('express');
      const app = express();
      app.get('/', (req, res) => {
        res.send('Hello, World!');
      });
      app.listen(3000, () => {
        console.log('App running on port 3000');
      });
      EOF

      npm init -y
      npm install express
      node app.js &
      sleep 5
      curl http://localhost:3000
    '''
  }
}
stage('Front-end') {
  agent {
    docker { image 'node:16-alpine' }
  }
  steps {
    sh '''
      cat > app.js <<'EOF'
      const express = require('express');
      const app = express();
      app.get('/', (req, res) => {
        res.send('Hello, World!');
      });
      app.listen(3000, () => {
        console.log('App running on port 3000');
      });
      EOF

      npm init -y
      npm install express
      node app.js &
      sleep 5
      curl http://localhost:3000
    '''
  }
}
}
